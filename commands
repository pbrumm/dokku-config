#!/bin/bash
set -e;

# Check if name is specified
if [[ $1 == config:* ]]; then
    if [[ -z $2 ]]; then
        echo "You must specify an app name"
        exit 1
    else
        APP="$2"
        # Check if app exists with the same name
        if [[ -d "/home/git/$APP" ]]; then
            APP_EXISTS=true
        else
            APP_EXISTS=false
        fi
    fi
fi

styled_hash () {
    vars=`echo -e "$1"`

    longest=""
    for word in $vars; do
        KEY=`echo $word | cut -d"=" -f1`
        if [ ${#KEY} -gt ${#longest} ]; then
            longest=$KEY
        fi
    done

    for word in $vars; do
        KEY=`echo $word | cut -d"=" -f1`
        VALUE=`echo $word | cut -d"=" -f2-`

        num_zeros=$((${#longest} - ${#KEY}))
        zeros=" "
        while [ $num_zeros -gt 0 ]; do
            zeros="$zeros "
            num_zeros=$(($num_zeros - 1))
        done
        echo "$KEY:$zeros$VALUE"
    done
}

case "$1" in

    config)
        APP="$2"
        ENV_FILE="/home/git/$APP/ENV"

        if [ ! -f $ENV_FILE ] || [ ! -s $ENV_FILE ] ; then
            echo "$APP has no config vars"
            exit 1
        fi

        VARS=`cat $ENV_FILE | grep -Eo "export ([A-Z\d_]+=.*)" | cut -d" " -f2`

        SHELL_OUTPUT=false
        for var in "$@"; do
            if [ "$var" == "--shell"]; then
                SHELL_OUTPUT=true
            fi
        done

        if [ ! $SHELL_OUTPUT ]; then
            echo $VARS
            exit 1
        fi

        echo "=== $APP Config Vars"
        styled_hash "$VARS"

  config:get)
    if [[ -z $3 ]]; then
        echo "Usage: heroku config:get KEY\nMust specify KEY."
        exit 1
    fi

    APP="$2";
    ENV_FILE="/home/git/$APP/ENV"

    if [ ! -f $ENV_FILE ] || [ ! -s $ENV_FILE ] ; then
        exit 1
    fi

    KEY="$3"

    cat $ENV_FILE | grep -Eo "export ([A-Z\d_]+=.*)" | cut -d" " -f2 | grep $KEY | cut -d"=" -f2-
    ;;

  config:set)
    if [[ -z $3 ]]; then
        echo "Please specify a name for the environment variable"
        exit 1
    fi

    if [[ -z $4 ]]; then
        echo "Please specify content for the environment variable"
        exit 1
    fi

    APP="$2"; IMAGE="app/$APP"
    APP_DIR="/home/git/$APP"

    ID=$(< "$APP_DIR/CONTAINER")

    OLD_ENV_LEN=$(wc -l < $APP_DIR/ENV)
    NEW_LINE_NUM=$(($OLD_ENV_LEN + 1))
    #shutdown the app
    docker stop $ID > /dev/null

    #add the environment variable
    ENV_TEMP="export $3=$4"
    sed -i "${NEW_LINE_NUM}i\${ENV_TEMP}" $APP_DIR/ENV
    echo "export MAPPING_$3=$NEW_LINE_NUM" >> $APP_DIR/ENV_MAPPING.sh

    #need to rebuild the app to add the new envs, correct?
    docker start $ID > /dev/null
    ;;

  config:unset)
    APP="$2"; IMAGE="app/$APP"
    APP_DIR="/home/git/$APP"

    source $APP_DIR/ENV_MAPPING.sh

    a="MAPPING_$3"

    sed "${!a}d" $APP_DIR/ENV
    ;;

  help)
    cat && cat<<EOF
    config <app>                    List all environment variables
    config:get <app>                List a specific environment variable
    config:set <app> <key> <value>  Set an environment variable
    config:unset <app> <key>        Unset an environment variable
EOF
    ;;

esac
cat
